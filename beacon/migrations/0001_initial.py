# Generated by Django 3.1.7 on 2021-03-23 09:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Case",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("index", models.IntegerField()),
                ("pedigree", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Consortium",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("key", models.CharField(max_length=255)),
                ("visibility_level", models.CharField(max_length=255)),
                ("access_limit", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="MetadataBeacon",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("beacon_id", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("api_version", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(help_text="Project title", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Variant",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("release", models.CharField(max_length=32)),
                ("chromosome", models.CharField(max_length=32)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("reference", models.CharField(max_length=512)),
                ("alternative", models.CharField(max_length=512)),
                ("genotype", models.JSONField()),
                (
                    "case_id",
                    models.ForeignKey(
                        help_text="Case to which this variant belongs.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="beacon.case",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectConsortium",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "consortium_id",
                    models.ForeignKey(
                        help_text="Consortium to which this object belongs.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="beacon.consortium",
                    ),
                ),
                (
                    "project_id",
                    models.ForeignKey(
                        help_text="Project to which this object belongs.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="beacon.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Phenotype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phenotype", models.CharField(max_length=255)),
                (
                    "case_id",
                    models.ForeignKey(
                        help_text="Case to which this phenotype belongs.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="beacon.case",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MetadataBeaconOrganisation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("beacon_org_id", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("contact_url", models.CharField(max_length=255)),
                (
                    "beacon_id",
                    models.ForeignKey(
                        help_text="Beacon which this organisation hosts.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="beacon.metadatabeacon",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MetadataBeaconDataset",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("beacon_data_id", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("assembly_id", models.CharField(max_length=255)),
                ("create_date_time", models.DateTimeField()),
                ("update_date_time", models.DateTimeField()),
                (
                    "beacon_id",
                    models.ForeignKey(
                        help_text="Beacon which this organisation hosts.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="beacon.metadatabeacon",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="case",
            name="project",
            field=models.ForeignKey(
                help_text="Project to which this object belongs.",
                on_delete=django.db.models.deletion.CASCADE,
                to="beacon.project",
            ),
        ),
        migrations.AddIndex(
            model_name="variant",
            index=models.Index(
                fields=[
                    "release",
                    "chromosome",
                    "start",
                    "end",
                    "reference",
                    "alternative",
                ],
                name="beacon_vari_release_c3bc43_idx",
            ),
        ),
    ]
